# 1. 소개

## 1.1 VirtOn 특징
- 중앙 관리
    - 처음 단일 노드로 시작하여 대규모 클러스터 노드로 확장할 수 있습니다. 클러스터 스택은 기본 설치 시 함께 제공됩니다.<br>
- 멀티 마스터
    - 통합 웹 기반 인터페이스는 모든 KVM, LXC과 같은 GuestOS 뿐만 아니라 전체 클러스터에 대한 깔끔한 개요를 제공합니다. GUI에서 VM과 컨테이너, 스토리지 또는 클러스터를 쉽게 관리할 수 있습니다. 관리를 위한 별도의 복잡하고 높은 비용의 서버를 설치할 필요가 없습니다.
Proxmox Cluster File System(pmxcfs)<br>시스템 구성 파일을 저장하기 위한 데이터베이스 기반 파일 시스템인 고유의 Proxmox Cluster File System(pmxcfs)을 사용합니다. 이를 통해 수천 대의 가상머신 구성을 저장할 수 있습니다. corosync를 사용하면 이러한 파일이 모든 클러스터 노드에서 실시간으로 복제됩니다. 파일 시스템은 모든 데이터를 디스크의 데이터베이스 내부에 영구적으로 저장하지만, 복제된 데이터는 최대 30MB 크기의 RAM에 저장됩니다.(이 RAM의 크기는 수 천대의 VM에 충분합니다.)
VirtOn은 고유한 클러스터 파일 시스템을 사용하는 유일한 가상화 플랫폼입니다.
- 웹 기반 관리 인터페이스
    - VirtOn에 포함된 웹 기반 관리 인터페이스를 통해 쉽게 관리 작업을 수행할 수 있습니다. 별도의 관리 툴이나 데이터베이스 크기가 큰 추가 관리 노드를 설치할 필요가 없습니다. 멀티 마스터 도구를 사용하면 클러스터의 모든 노드에서 전체 클러스터를 관리할 수 있습니다.<br> JavaScriptFramework(ExtJS) 기반의 중앙 웹 기반 관리를 통해 GUI에서 모든 기능을 제어하고 각 단일 노드의 히스토리와 syslog를 확인할 수 있습니다. 이 기능에는 백업, 복구, 라이브 마이그레이션 또는 HA 트리거 작업 등이 포함됩니다.
- CLI 환경
    - Unix shell이나 Windows Powershell 환경에 익숙한 사용자를 위해 VirtOn은 가상 환경의 모든 구성 요소를 관리하는 명령줄 인터페이스(CLI)를 제공합니다. 이 CLI는 탭 완성 기능과 UNIX man 페이지 형태의 전체 설명서를 제공합니다.
- REST API
    - VirtOn은 RESTful API를 사용합니다. 기본 데이터 형식은 JSON을 사용하며, 전체 API는 JSON 스키마를 사용합니다. 이를 통해 커스텀 호스팅 환경과 같은 타사 관리 도구에 대한 빠르고 쉬운 통합이 가능합니다.
